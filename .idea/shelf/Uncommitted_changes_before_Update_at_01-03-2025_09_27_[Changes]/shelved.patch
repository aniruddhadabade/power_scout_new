Index: app/build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    alias(libs.plugins.android.application)\r\n    id(\"com.google.gms.google-services\")\r\n}\r\n\r\nandroid {\r\n    namespace = \"com.example.powerscout\"\r\n    compileSdk = 35\r\n\r\n    defaultConfig {\r\n        applicationId = \"com.example.powerscout\"\r\n        minSdk = 24\r\n        targetSdk = 35\r\n        versionCode = 1\r\n        versionName = \"1.0\"\r\n\r\n        testInstrumentationRunner = \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            isMinifyEnabled = false\r\n            proguardFiles(\r\n                getDefaultProguardFile(\"proguard-android-optimize.txt\"),\r\n                \"proguard-rules.pro\"\r\n            )\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility = JavaVersion.VERSION_1_8\r\n        targetCompatibility = JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation(libs.appcompat)\r\n    implementation(libs.material)\r\n    implementation(libs.activity)\r\n    implementation (\"com.android.volley:volley:1.2.1\")\r\n    implementation (\"com.github.PhilJay:MPAndroidChart:v3.1.0\")\r\n    implementation (\"com.google.android.material:material:1.6.0\")\r\n    implementation (\"com.google.android.gms:play-services-auth:20.7.0\")\r\n    implementation(libs.constraintlayout)\r\n    testImplementation(libs.junit)\r\n    androidTestImplementation(libs.ext.junit)\r\n    androidTestImplementation(libs.espresso.core)\r\n    implementation(platform(\"com.google.firebase:firebase-bom:33.8.0\"))\r\n    implementation(\"com.google.firebase:firebase-analytics\")\r\n    implementation(\"com.google.firebase:firebase-firestore:24.4.3\")\r\n    implementation(\"com.google.firebase:firebase-auth:22.1.1\")\r\n    implementation(\"com.google.android.gms:play-services-auth:20.4.0\")\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle.kts b/app/build.gradle.kts
--- a/app/build.gradle.kts	(revision 46aa141b5236783df088f4cd081e249307c71ffc)
+++ b/app/build.gradle.kts	(date 1740565855361)
@@ -50,5 +50,8 @@
     implementation("com.google.firebase:firebase-firestore:24.4.3")
     implementation("com.google.firebase:firebase-auth:22.1.1")
     implementation("com.google.android.gms:play-services-auth:20.4.0")
+    implementation("com.google.firebase:firebase-storage:20.3.0")
+    implementation("com.github.bumptech.glide:glide:4.15.1")
+    annotationProcessor("com.github.bumptech.glide:compiler:4.15.1")
 
 }
\ No newline at end of file
Index: app/src/main/java/com/example/powerscout/activity_update_info1.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.powerscout;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.ImageButton;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.activity.EdgeToEdge;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.graphics.Insets;\r\nimport androidx.core.view.ViewCompat;\r\nimport androidx.core.view.WindowInsetsCompat;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\n\r\nimport com.google.android.material.navigation.NavigationView;\r\n\r\npublic class activity_update_info1 extends AppCompatActivity {\r\n\r\n    private DrawerLayout drawerLayout;\r\n    private NavigationView navigationView;\r\n    private ImageButton buttonDrawerToggle;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        EdgeToEdge.enable(this);\r\n        setContentView(R.layout.activity_update_info1);\r\n\r\n        // Apply window insets\r\n        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {\r\n            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());\r\n            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);\r\n            return insets;\r\n        });\r\n\r\n        // Initialize drawer and navigation view\r\n        drawerLayout = findViewById(R.id.drawerLayout);\r\n        navigationView = findViewById(R.id.navigationView);\r\n        buttonDrawerToggle = findViewById(R.id.buttonDrawerToggle); // Ensure this is in your XML\r\n\r\n        // Handle drawer button click\r\n        buttonDrawerToggle.setOnClickListener(v -> drawerLayout.open());\r\n\r\n        // Handle navigation item clicks\r\n        navigationView.setNavigationItemSelectedListener(new NavigationView.OnNavigationItemSelectedListener() {\r\n            @Override\r\n            public boolean onNavigationItemSelected(@NonNull MenuItem item) {\r\n                int itemId = item.getItemId();\r\n                Toast.makeText(activity_update_info1.this, item.getTitle() + \" Clicked\", Toast.LENGTH_SHORT).show();\r\n                drawerLayout.close();\r\n                return true;\r\n            }\r\n        });\r\n\r\n        // Handle Next button click\r\n        Button nextButton = findViewById(R.id.saveButton);\r\n        nextButton.setOnClickListener(v -> {\r\n            Intent intent = new Intent(activity_update_info1.this, activity_update_info2.class);\r\n            startActivity(intent);\r\n        });\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/powerscout/activity_update_info1.java b/app/src/main/java/com/example/powerscout/activity_update_info1.java
--- a/app/src/main/java/com/example/powerscout/activity_update_info1.java	(revision 46aa141b5236783df088f4cd081e249307c71ffc)
+++ b/app/src/main/java/com/example/powerscout/activity_update_info1.java	(date 1740566471875)
@@ -1,66 +1,193 @@
 package com.example.powerscout;
 
+import androidx.annotation.NonNull;
+import androidx.appcompat.app.AppCompatActivity;
+import androidx.drawerlayout.widget.DrawerLayout;
+
+import android.app.ProgressDialog;
 import android.content.Intent;
+import android.net.Uri;
 import android.os.Bundle;
-import android.view.MenuItem;
 import android.view.View;
 import android.widget.Button;
-import android.widget.ImageButton;
+import android.widget.EditText;
+import android.widget.ImageView;
 import android.widget.Toast;
 
-import androidx.activity.EdgeToEdge;
-import androidx.annotation.NonNull;
-import androidx.appcompat.app.AppCompatActivity;
-import androidx.core.graphics.Insets;
-import androidx.core.view.ViewCompat;
-import androidx.core.view.WindowInsetsCompat;
-import androidx.drawerlayout.widget.DrawerLayout;
+import com.bumptech.glide.Glide;
+import com.google.android.gms.tasks.OnCompleteListener;
+import com.google.android.gms.tasks.OnFailureListener;
+import com.google.android.gms.tasks.OnSuccessListener;
+import com.google.android.gms.tasks.Task;
+import com.google.firebase.auth.AuthCredential;
+import com.google.firebase.auth.EmailAuthProvider;
+import com.google.firebase.auth.FirebaseAuth;
+import com.google.firebase.auth.FirebaseUser;
+import com.google.firebase.auth.UserProfileChangeRequest;
+import com.google.firebase.firestore.DocumentSnapshot;
+import com.google.firebase.firestore.FirebaseFirestore;
+import com.google.firebase.storage.FirebaseStorage;
+import com.google.firebase.storage.StorageReference;
+import com.google.firebase.storage.UploadTask;
 
-import com.google.android.material.navigation.NavigationView;
+import java.util.HashMap;
+import java.util.Map;
 
 public class activity_update_info1 extends AppCompatActivity {
 
-    private DrawerLayout drawerLayout;
-    private NavigationView navigationView;
-    private ImageButton buttonDrawerToggle;
+    private EditText editEmail, editUsername, editPassword;
+    private Button saveButton;
+    private ImageView profileImage;
+    private ProgressDialog progressDialog;
+
+    // Firebase
+    private FirebaseAuth mAuth;
+    private FirebaseFirestore db;
+    private FirebaseStorage storage;
+    private StorageReference storageRef;
+    private Uri imageUri;
+    private static final int PICK_IMAGE_REQUEST = 1;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        EdgeToEdge.enable(this);
         setContentView(R.layout.activity_update_info1);
 
-        // Apply window insets
-        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {
-            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
-            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
-            return insets;
-        });
+        // Initialize Firebase
+        mAuth = FirebaseAuth.getInstance();
+        db = FirebaseFirestore.getInstance();
+        storage = FirebaseStorage.getInstance();
+        storageRef = storage.getReference();
+
+        // Initialize UI elements
+        editEmail = findViewById(R.id.editEmail);
+        editUsername = findViewById(R.id.editUsername);
+        editPassword = findViewById(R.id.editPassword);
+        saveButton = findViewById(R.id.saveButton);
+        profileImage = findViewById(R.id.image1);
+        progressDialog = new ProgressDialog(this);
+        progressDialog.setMessage("Updating profile...");
 
-        // Initialize drawer and navigation view
-        drawerLayout = findViewById(R.id.drawerLayout);
-        navigationView = findViewById(R.id.navigationView);
-        buttonDrawerToggle = findViewById(R.id.buttonDrawerToggle); // Ensure this is in your XML
+        // Check if user is logged in
+        FirebaseUser currentUser = mAuth.getCurrentUser();
+        if (currentUser == null) {
+            startActivity(new Intent(this, LoginActivity.class));
+            finish();
+            return;
+        }
 
-        // Handle drawer button click
-        buttonDrawerToggle.setOnClickListener(v -> drawerLayout.open());
+        loadUserData(currentUser);
 
-        // Handle navigation item clicks
-        navigationView.setNavigationItemSelectedListener(new NavigationView.OnNavigationItemSelectedListener() {
-            @Override
-            public boolean onNavigationItemSelected(@NonNull MenuItem item) {
-                int itemId = item.getItemId();
-                Toast.makeText(activity_update_info1.this, item.getTitle() + " Clicked", Toast.LENGTH_SHORT).show();
-                drawerLayout.close();
-                return true;
-            }
-        });
+        profileImage.setOnClickListener(v -> openFileChooser());
+
+        saveButton.setOnClickListener(v -> updateUserInfo());
+    }
+
+    private void loadUserData(FirebaseUser user) {
+        editEmail.setText(user.getEmail());
+        db.collection("users").document(user.getUid()).get()
+                .addOnSuccessListener(documentSnapshot -> {
+                    if (documentSnapshot.exists()) {
+                        editUsername.setText(documentSnapshot.getString("username"));
+                        String profileImageUrl = documentSnapshot.getString("profileImageUrl");
+                        if (profileImageUrl != null && !profileImageUrl.isEmpty()) {
+                            Glide.with(this).load(profileImageUrl).placeholder(R.drawable.profilebkg).into(profileImage);
+                        }
+                    }
+                })
+                .addOnFailureListener(e -> Toast.makeText(this, "Failed to load user data", Toast.LENGTH_SHORT).show());
+    }
+
+    private void openFileChooser() {
+        Intent intent = new Intent();
+        intent.setType("image/*");
+        intent.setAction(Intent.ACTION_GET_CONTENT);
+        startActivityForResult(intent, PICK_IMAGE_REQUEST);
+    }
+
+    @Override
+    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
+        super.onActivityResult(requestCode, resultCode, data);
+        if (requestCode == PICK_IMAGE_REQUEST && resultCode == RESULT_OK && data != null && data.getData() != null) {
+            imageUri = data.getData();
+            profileImage.setImageURI(imageUri);
+        }
+    }
+
+    private void updateUserInfo() {
+        FirebaseUser user = mAuth.getCurrentUser();
+        if (user == null) return;
+
+        String email = editEmail.getText().toString().trim();
+        String username = editUsername.getText().toString().trim();
+        String password = editPassword.getText().toString().trim();
+
+        if (email.isEmpty() || username.isEmpty()) {
+            Toast.makeText(this, "Email and username cannot be empty", Toast.LENGTH_SHORT).show();
+            return;
+        }
+
+        progressDialog.show();
+
+        Map<String, Object> userData = new HashMap<>();
+        userData.put("username", username);
+        userData.put("email", email);
+
+        if (imageUri != null) {
+            uploadProfileImage(user.getUid(), userData);
+        } else {
+            updateFirestoreAndAuth(user, userData, email, password);
+        }
+    }
+
+    private void uploadProfileImage(String userId, Map<String, Object> userData) {
+        StorageReference imageRef = storageRef.child("profile_images/" + userId + ".jpg");
+        imageRef.putFile(imageUri)
+                .addOnSuccessListener(taskSnapshot -> imageRef.getDownloadUrl().addOnSuccessListener(uri -> {
+                    userData.put("profileImageUrl", uri.toString());
+                    updateFirestoreAndAuth(mAuth.getCurrentUser(), userData, editEmail.getText().toString().trim(), editPassword.getText().toString().trim());
+                }))
+                .addOnFailureListener(e -> {
+                    progressDialog.dismiss();
+                    Toast.makeText(this, "Failed to upload image", Toast.LENGTH_SHORT).show();
+                });
+    }
+
+    private void updateFirestoreAndAuth(FirebaseUser user, Map<String, Object> userData, String newEmail, String newPassword) {
+        db.collection("users").document(user.getUid()).update(userData)
+                .addOnSuccessListener(aVoid -> {
+                    UserProfileChangeRequest profileUpdates = new UserProfileChangeRequest.Builder()
+                            .setDisplayName(userData.get("username").toString())
+                            .build();
+                    user.updateProfile(profileUpdates);
+
+                    if (!newEmail.equals(user.getEmail())) {
+                        updateEmail(user, newEmail, newPassword);
+                    } else if (!newPassword.isEmpty()) {
+                        updatePassword(user, newPassword);
+                    } else {
+                        finishUpdate();
+                    }
+                })
+                .addOnFailureListener(e -> progressDialog.dismiss());
+    }
 
-        // Handle Next button click
-        Button nextButton = findViewById(R.id.saveButton);
-        nextButton.setOnClickListener(v -> {
-            Intent intent = new Intent(activity_update_info1.this, activity_update_info2.class);
-            startActivity(intent);
+    private void updateEmail(FirebaseUser user, String newEmail, String newPassword) {
+        user.updateEmail(newEmail).addOnCompleteListener(task -> {
+            if (task.isSuccessful() && !newPassword.isEmpty()) {
+                updatePassword(user, newPassword);
+            } else {
+                finishUpdate();
+            }
         });
     }
-}
\ No newline at end of file
+
+    private void updatePassword(FirebaseUser user, String newPassword) {
+        user.updatePassword(newPassword).addOnCompleteListener(task -> finishUpdate());
+    }
+
+    private void finishUpdate() {
+        progressDialog.dismiss();
+        Toast.makeText(this, "Profile updated successfully!", Toast.LENGTH_SHORT).show();
+    }
+}
Index: app/src/main/java/com/example/powerscout/baseactivity.java
===================================================================
diff --git a/app/src/main/java/com/example/powerscout/baseactivity.java b/app/src/main/java/com/example/powerscout/baseactivity.java
deleted file mode 100644
--- a/app/src/main/java/com/example/powerscout/baseactivity.java	(revision 46aa141b5236783df088f4cd081e249307c71ffc)
+++ /dev/null	(revision 46aa141b5236783df088f4cd081e249307c71ffc)
@@ -1,4 +0,0 @@
-package com.example.powerscout;
-
-public class baseactivity {
-}
Index: app/src/main/java/com/example/powerscout/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.powerscout;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n    private Button loginButton;\r\n    private Button signUpButton;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        // Find view references\r\n        loginButton = findViewById(R.id.loginbutton);\r\n        signUpButton = findViewById(R.id.signinbutton);\r\n\r\n        // Set click listeners for buttons\r\n        loginButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                // Handle login button click\r\n                Intent loginIntent = new Intent(MainActivity.this, LoginActivity.class);\r\n                startActivity(loginIntent);\r\n            }\r\n        });\r\n\r\n        signUpButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                // Handle sign-up button click\r\n                Intent registerIntent = new Intent(MainActivity.this, activity_update_info1.class);\r\n                startActivity(registerIntent);\r\n            }\r\n\r\n        });\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/powerscout/MainActivity.java b/app/src/main/java/com/example/powerscout/MainActivity.java
--- a/app/src/main/java/com/example/powerscout/MainActivity.java	(revision 46aa141b5236783df088f4cd081e249307c71ffc)
+++ b/app/src/main/java/com/example/powerscout/MainActivity.java	(date 1740545939223)
@@ -34,7 +34,7 @@
             @Override
             public void onClick(View v) {
                 // Handle sign-up button click
-                Intent registerIntent = new Intent(MainActivity.this, activity_update_info1.class);
+                Intent registerIntent = new Intent(MainActivity.this, Register1Activity.class);
                 startActivity(registerIntent);
             }
 
Index: app/src/main/java/com/example/powerscout/Register1Activity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.powerscout;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Patterns;\r\nimport android.widget.EditText;\r\nimport android.widget.Toast;\r\n\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\n\r\npublic class Register1Activity extends AppCompatActivity {\r\n\r\n    private EditText editTextEmail, editTextPassword, editTextConfirmPassword;\r\n    private FirebaseAuth mAuth;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_register); // Ensure correct XML file name\r\n\r\n        mAuth = FirebaseAuth.getInstance();\r\n\r\n        editTextEmail = findViewById(R.id.emailEditText); // Updated ID\r\n        editTextPassword = findViewById(R.id.passwordEditText); // Updated ID\r\n        editTextConfirmPassword = findViewById(R.id.confirmPasswordEditText); // Updated ID\r\n\r\n\r\n        findViewById(R.id.registerButton).setOnClickListener(v -> registerUser()); // Updated ID\r\n    }\r\n\r\n    private void registerUser() {\r\n        String email = editTextEmail.getText().toString().trim();\r\n        String password = editTextPassword.getText().toString().trim();\r\n        String confirmPassword = editTextConfirmPassword.getText().toString().trim();\r\n\r\n        if (email.isEmpty() || !Patterns.EMAIL_ADDRESS.matcher(email).matches()) {\r\n            editTextEmail.setError(\"Enter a valid email!\");\r\n            editTextEmail.requestFocus();\r\n            return;\r\n        }\r\n\r\n        if (password.isEmpty()) {\r\n            editTextPassword.setError(\"Password is required!\");\r\n            editTextPassword.requestFocus();\r\n            return;\r\n        }\r\n\r\n        if (password.length() < 6) { // Example minimum password length\r\n            editTextPassword.setError(\"Password should be at least 6 characters!\");\r\n            editTextPassword.requestFocus();\r\n            return;\r\n        }\r\n\r\n        if (!password.equals(confirmPassword)) {\r\n            editTextConfirmPassword.setError(\"Passwords do not match!\");\r\n            editTextConfirmPassword.requestFocus();\r\n            return;\r\n        }\r\n\r\n\r\n        mAuth.createUserWithEmailAndPassword(email, password)\r\n                .addOnCompleteListener(new OnCompleteListener<AuthResult>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<AuthResult> task) {\r\n                        if (task.isSuccessful()) {\r\n                            // Registration success\r\n                            Toast.makeText(Register1Activity.this, \"Registration successful!\", Toast.LENGTH_SHORT).show();\r\n\r\n                            // Navigate to Login Activity\r\n                            Intent intent = new Intent(Register1Activity.this, LoginActivity.class); // Replace LoginActivity\r\n                            startActivity(intent);\r\n                            finish();\r\n                        } else {\r\n                            // Registration failed\r\n                            String errorMessage = task.getException().getMessage(); // Get specific error\r\n                            Toast.makeText(Register1Activity.this, \"Registration failed: \" + errorMessage, Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/powerscout/Register1Activity.java b/app/src/main/java/com/example/powerscout/Register1Activity.java
--- a/app/src/main/java/com/example/powerscout/Register1Activity.java	(revision 46aa141b5236783df088f4cd081e249307c71ffc)
+++ b/app/src/main/java/com/example/powerscout/Register1Activity.java	(date 1740547553006)
@@ -5,39 +5,61 @@
 
 import android.content.Intent;
 import android.os.Bundle;
+import android.util.Log;
 import android.util.Patterns;
 import android.widget.EditText;
 import android.widget.Toast;
 
 import com.google.android.gms.tasks.OnCompleteListener;
+import com.google.android.gms.tasks.OnFailureListener;
+import com.google.android.gms.tasks.OnSuccessListener;
 import com.google.android.gms.tasks.Task;
 import com.google.firebase.auth.AuthResult;
 import com.google.firebase.auth.FirebaseAuth;
-
+import com.google.firebase.auth.FirebaseUser;
+import com.google.firebase.firestore.DocumentReference;
+import com.google.firebase.firestore.DocumentSnapshot;
+import com.google.firebase.firestore.FirebaseFirestore;
+import com.google.firebase.firestore.Transaction;
+import java.util.Collections;
+import java.util.HashMap;
+import java.util.Map;
 public class Register1Activity extends AppCompatActivity {
 
-    private EditText editTextEmail, editTextPassword, editTextConfirmPassword;
+    private EditText editTextEmail, editTextPassword, editTextConfirmPassword, editTextUsername;
     private FirebaseAuth mAuth;
+    private FirebaseFirestore db;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_register); // Ensure correct XML file name
 
+        // Initialize Firebase Auth and Firestore
         mAuth = FirebaseAuth.getInstance();
+        db = FirebaseFirestore.getInstance();
 
-        editTextEmail = findViewById(R.id.emailEditText); // Updated ID
-        editTextPassword = findViewById(R.id.passwordEditText); // Updated ID
-        editTextConfirmPassword = findViewById(R.id.confirmPasswordEditText); // Updated ID
+        // Find views
+        editTextEmail = findViewById(R.id.emailEditText);
+        editTextPassword = findViewById(R.id.passwordEditText);
+        editTextConfirmPassword = findViewById(R.id.confirmPasswordEditText);
+        editTextUsername = findViewById(R.id.editTextUsername); // Fixed initialization
 
-
-        findViewById(R.id.registerButton).setOnClickListener(v -> registerUser()); // Updated ID
+        findViewById(R.id.registerButton).setOnClickListener(v -> registerUser());
     }
 
     private void registerUser() {
         String email = editTextEmail.getText().toString().trim();
         String password = editTextPassword.getText().toString().trim();
         String confirmPassword = editTextConfirmPassword.getText().toString().trim();
+        String username = editTextUsername.getText().toString().trim();
+
+        // Input validation
+        if (username.isEmpty()) {
+            editTextUsername.setError("Username is required!");
+            editTextUsername.requestFocus();
+            return;
+        }
 
         if (email.isEmpty() || !Patterns.EMAIL_ADDRESS.matcher(email).matches()) {
             editTextEmail.setError("Enter a valid email!");
@@ -45,14 +67,8 @@
             return;
         }
 
-        if (password.isEmpty()) {
-            editTextPassword.setError("Password is required!");
-            editTextPassword.requestFocus();
-            return;
-        }
-
-        if (password.length() < 6) { // Example minimum password length
-            editTextPassword.setError("Password should be at least 6 characters!");
+        if (password.isEmpty() || password.length() < 6) {
+            editTextPassword.setError("Password must be at least 6 characters!");
             editTextPassword.requestFocus();
             return;
         }
@@ -63,25 +79,61 @@
             return;
         }
 
-
+        // Create user with Firebase Auth
         mAuth.createUserWithEmailAndPassword(email, password)
-                .addOnCompleteListener(new OnCompleteListener<AuthResult>() {
-                    @Override
-                    public void onComplete(@NonNull Task<AuthResult> task) {
-                        if (task.isSuccessful()) {
-                            // Registration success
-                            Toast.makeText(Register1Activity.this, "Registration successful!", Toast.LENGTH_SHORT).show();
-
-                            // Navigate to Login Activity
-                            Intent intent = new Intent(Register1Activity.this, LoginActivity.class); // Replace LoginActivity
-                            startActivity(intent);
-                            finish();
-                        } else {
-                            // Registration failed
-                            String errorMessage = task.getException().getMessage(); // Get specific error
-                            Toast.makeText(Register1Activity.this, "Registration failed: " + errorMessage, Toast.LENGTH_SHORT).show();
-                        }
-                    }
-                });
+                .addOnCompleteListener(task -> {
+                    if (task.isSuccessful()) {
+                        FirebaseUser user = mAuth.getCurrentUser();
+                        if (user != null) {
+                            saveUserToFirestore(user.getUid(), username, email);
+                        }
+                    } else {
+                        Toast.makeText(Register1Activity.this,
+                                task.getException() != null ? task.getException().getMessage() : "Registration failed",
+                                Toast.LENGTH_SHORT).show();
+                    }
+                });
+    }
+
+    private void saveUserToFirestore(String uid, String username, String email) {
+        final DocumentReference counterRef = db.collection("counters").document("user_counter");
+
+        db.runTransaction(transaction -> {
+            DocumentSnapshot snapshot = transaction.get(counterRef);
+
+            int nextUserId;
+            if (snapshot.exists() && snapshot.contains("current_id")) {
+                nextUserId = snapshot.getLong("current_id").intValue() + 1;
+                transaction.update(counterRef, "current_id", nextUserId);
+            } else {
+                nextUserId = 1; // Start user ID from 1
+                transaction.set(counterRef, Collections.singletonMap("current_id", nextUserId));
+            }
+
+            return nextUserId;
+        }).addOnSuccessListener(nextUserId -> {
+            Map<String, Object> userData = new HashMap<>();
+            userData.put("user_id", nextUserId);
+            userData.put("username", username);
+            userData.put("email", email);
+            userData.put("uid", uid);
+            userData.put("created_at", System.currentTimeMillis());
+
+            db.collection("users").document(uid)
+                    .set(userData)
+                    .addOnSuccessListener(aVoid -> {
+                        Toast.makeText(Register1Activity.this, "Registration successful!", Toast.LENGTH_SHORT).show();
+                        startActivity(new Intent(Register1Activity.this, LoginActivity.class));
+                        finish();
+                    })
+                    .addOnFailureListener(e -> {
+                        Toast.makeText(Register1Activity.this, "Account created but failed to save profile: " + e.getMessage(), Toast.LENGTH_LONG).show();
+                        Log.e("Firestore", "Failed to save user data", e);
+                    });
+        }).addOnFailureListener(e -> {
+            Toast.makeText(Register1Activity.this, "Failed to generate user ID: " + e.getMessage(), Toast.LENGTH_SHORT).show();
+            Log.e("Firestore", "Transaction failed", e);
+        });
     }
-}
\ No newline at end of file
+}
+
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    package=\"com.example.powerscout\">\r\n    <!-- Permission to access the internet -->\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:dataExtractionRules=\"@xml/data_extraction_rules\"\r\n        android:fullBackupContent=\"@xml/backup_rules\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.PowerScout\"\r\n        tools:targetApi=\"31\">\r\n        <activity\r\n            android:name=\".activity_update_info2\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".activity_update_info1\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".activity_update_info3\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".NavigationContent\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".DrawerHeader\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".HomeActivity\"\r\n            android:exported=\"false\" /> <!-- SplashActivity is the launcher activity -->\r\n        <activity\r\n            android:name=\".SplashActivity\"\r\n            android:exported=\"true\"\r\n            android:theme=\"@style/Theme.Design.NoActionBar\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity> <!-- MainActivity should be the first screen after SplashActivity -->\r\n        <activity\r\n            android:name=\".MainActivity\"\r\n            android:exported=\"true\"\r\n            android:theme=\"@style/Theme.PowerScout\" /> <!-- Other activities -->\r\n        <activity\r\n            android:name=\".LoginActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".Register1Activity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".Register2Activity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".ResetPasswordActivity\"\r\n            android:exported=\"true\" />\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	(revision 46aa141b5236783df088f4cd081e249307c71ffc)
+++ b/app/src/main/AndroidManifest.xml	(date 1740569534331)
@@ -16,6 +16,15 @@
         android:theme="@style/Theme.PowerScout"
         tools:targetApi="31">
         <activity
+            android:name=".complete_info3"
+            android:exported="false" />
+        <activity
+            android:name=".complete_info2"
+            android:exported="false" />
+        <activity
+            android:name=".complete_info1"
+            android:exported="false" />
+        <activity
             android:name=".activity_update_info2"
             android:exported="false" />
         <activity
Index: app/src/main/java/com/example/powerscout/DrawerHeader.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.powerscout;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport androidx.activity.EdgeToEdge;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.graphics.Insets;\r\nimport androidx.core.view.ViewCompat;\r\nimport androidx.core.view.WindowInsetsCompat;\r\n\r\npublic class DrawerHeader extends AppCompatActivity {\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        EdgeToEdge.enable(this);\r\n        setContentView(R.layout.activity_drawer_header);\r\n        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {\r\n            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());\r\n            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);\r\n            return insets;\r\n        });\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/powerscout/DrawerHeader.java b/app/src/main/java/com/example/powerscout/DrawerHeader.java
--- a/app/src/main/java/com/example/powerscout/DrawerHeader.java	(revision 46aa141b5236783df088f4cd081e249307c71ffc)
+++ b/app/src/main/java/com/example/powerscout/DrawerHeader.java	(date 1740551171997)
@@ -1,24 +1,65 @@
 package com.example.powerscout;
 
 import android.os.Bundle;
+import android.widget.ImageView;
+import android.widget.TextView;
+import android.widget.Toast;
 
-import androidx.activity.EdgeToEdge;
 import androidx.appcompat.app.AppCompatActivity;
-import androidx.core.graphics.Insets;
-import androidx.core.view.ViewCompat;
-import androidx.core.view.WindowInsetsCompat;
+
+import com.google.firebase.auth.FirebaseAuth;
+import com.google.firebase.auth.FirebaseUser;
+import com.google.firebase.firestore.DocumentReference;
+import com.google.firebase.firestore.FirebaseFirestore;
 
 public class DrawerHeader extends AppCompatActivity {
 
+    private TextView textUserName, textUserEmail;
+    private ImageView userImage;
+    private FirebaseAuth mAuth;
+    private FirebaseFirestore db;
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        EdgeToEdge.enable(this);
         setContentView(R.layout.activity_drawer_header);
-        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {
-            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
-            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
-            return insets;
-        });
+
+        // Initialize Firebase Auth and Firestore
+        mAuth = FirebaseAuth.getInstance();
+        db = FirebaseFirestore.getInstance();
+
+        // Initialize UI elements
+        textUserName = findViewById(R.id.textUserName);
+        textUserEmail = findViewById(R.id.textUserEmail);
+        userImage = findViewById(R.id.userImage);
+
+        // Fetch user details from Firestore
+        loadUserInfo();
+    }
+
+    private void loadUserInfo() {
+        FirebaseUser user = mAuth.getCurrentUser();
+
+        if (user != null) {
+            String uid = user.getUid();
+
+            // Reference Firestore document
+            DocumentReference userRef = db.collection("users").document(uid);
+            userRef.get().addOnSuccessListener(documentSnapshot -> {
+                if (documentSnapshot.exists()) {
+                    String username = documentSnapshot.getString("username");
+                    String email = documentSnapshot.getString("email");
+
+                    // Update UI
+                    textUserName.setText(username != null ? username : "User Name");
+                    textUserEmail.setText(email != null ? email : "User Email");
+
+                } else {
+                    Toast.makeText(this, "User data not found.", Toast.LENGTH_SHORT).show();
+                }
+            }).addOnFailureListener(e -> {
+                Toast.makeText(this, "Failed to load user data: " + e.getMessage(), Toast.LENGTH_SHORT).show();
+            });
+        }
     }
-}
\ No newline at end of file
+}
Index: app/src/main/res/layout/activity_register.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/main\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"#F2F2F2\"\r\n    tools:context=\".Register1Activity\">\r\n\r\n    <ImageView\r\n        android:id=\"@+id/imageView3\"\r\n        android:layout_width=\"0dp\"  android:layout_height=\"0dp\"\r\n        android:contentDescription=\"TODO\"\r\n        android:scaleType=\"centerCrop\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:srcCompat=\"@drawable/bground\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/textView1\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"16dp\"\r\n        android:layout_marginTop=\"44dp\"\r\n        android:text=\"Create \\nAccount\"\r\n        android:textColor=\"#ffffff\"\r\n        android:textSize=\"35sp\"\r\n        android:textStyle=\"bold\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <ScrollView\r\n        xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:layout_marginTop=\"130dp\"\r\n        android:fillViewport=\"true\">\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"80dp\"\r\n        android:orientation=\"vertical\"\r\n        android:padding=\"32dp\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/textView1\">\r\n\r\n        <TextView\r\n            android:id=\"@+id/textView4\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"32dp\"\r\n            android:text=\"Username\"\r\n            android:textColor=\"#000000\"\r\n            android:textSize=\"20sp\"\r\n            android:textStyle=\"bold\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/emailEditTextUser\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"50dp\"\r\n            android:layout_marginTop=\"10dp\"\r\n            android:background=\"@drawable/edittext_background\"\r\n            android:ems=\"10\"\r\n            android:hint=\"Enter Your Username\"\r\n            android:inputType=\"text\"\r\n            android:padding=\"12dp\"\r\n            android:textColor=\"#707070\"\r\n            android:textSize=\"18sp\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/textView67\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"12dp\"\r\n            android:text=\"Email\"\r\n            android:textColor=\"#000000\"\r\n            android:textSize=\"20sp\"\r\n            android:textStyle=\"bold\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/emailEditText\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"50dp\"\r\n            android:layout_marginTop=\"10dp\"\r\n            android:background=\"@drawable/edittext_background\"\r\n            android:ems=\"10\"\r\n            android:hint=\"Enter Your Email\"\r\n            android:inputType=\"textEmailAddress\"\r\n            android:padding=\"12dp\"\r\n            android:textColor=\"#707070\"\r\n            android:textSize=\"18sp\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/textView6\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"14dp\"\r\n            android:text=\"Password\"\r\n            android:textColor=\"#000000\"\r\n            android:textSize=\"20sp\"\r\n            android:textStyle=\"bold\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/passwordEditText\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"50dp\"\r\n            android:layout_marginTop=\"10dp\"\r\n            android:background=\"@drawable/edittext_background\"\r\n            android:ems=\"10\"\r\n            android:hint=\"Enter Your Password\"\r\n            android:inputType=\"textPassword\"\r\n            android:padding=\"12dp\"\r\n            android:textColor=\"#707070\"\r\n            android:textSize=\"18sp\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/textView8\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"12dp\"\r\n            android:text=\"Confirm Password\"\r\n            android:textColor=\"#000000\"\r\n            android:textSize=\"20sp\"\r\n            android:textStyle=\"bold\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/confirmPasswordEditText\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"50dp\"\r\n            android:layout_marginTop=\"10dp\"\r\n            android:background=\"@drawable/edittext_background\"\r\n            android:ems=\"10\"\r\n            android:hint=\"Confirm Your Password\"\r\n            android:inputType=\"textPassword\"\r\n            android:padding=\"12dp\"\r\n            android:textColor=\"#707070\"\r\n            android:textSize=\"18sp\" />\r\n\r\n        <androidx.appcompat.widget.AppCompatButton\r\n            android:id=\"@+id/registerButton\"\r\n            style=\"@android:style/Widget.Button\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"50dp\"\r\n            android:layout_marginTop=\"26dp\"\r\n            android:background=\"@drawable/button_background\"\r\n            android:text=\"Register\"\r\n            android:textColor=\"#ffffff\"\r\n            android:textSize=\"25sp\"\r\n            android:textStyle=\"bold\" />\r\n    </LinearLayout>\r\n    </ScrollView>\r\n\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_register.xml b/app/src/main/res/layout/activity_register.xml
--- a/app/src/main/res/layout/activity_register.xml	(revision 46aa141b5236783df088f4cd081e249307c71ffc)
+++ b/app/src/main/res/layout/activity_register.xml	(date 1740545366453)
@@ -10,8 +10,9 @@
 
     <ImageView
         android:id="@+id/imageView3"
-        android:layout_width="0dp"  android:layout_height="0dp"
-        android:contentDescription="TODO"
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:contentDescription="Background Image"
         android:scaleType="centerCrop"
         app:layout_constraintBottom_toBottomOf="parent"
         app:layout_constraintEnd_toEndOf="parent"
@@ -33,128 +34,114 @@
         app:layout_constraintTop_toTopOf="parent" />
 
     <ScrollView
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        xmlns:app="http://schemas.android.com/apk/res-auto"
         android:layout_width="match_parent"
         android:layout_height="match_parent"
         android:layout_marginTop="130dp"
         android:fillViewport="true">
 
-    <LinearLayout
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="80dp"
-        android:orientation="vertical"
-        android:padding="32dp"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toBottomOf="@+id/textView1">
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="vertical"
+            android:padding="32dp">
 
-        <TextView
-            android:id="@+id/textView4"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="32dp"
-            android:text="Username"
-            android:textColor="#000000"
-            android:textSize="20sp"
-            android:textStyle="bold" />
+            <TextView
+                android:id="@+id/textView4"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:text="Username"
+                android:textColor="#000000"
+                android:textSize="20sp"
+                android:textStyle="bold" />
 
-        <EditText
-            android:id="@+id/emailEditTextUser"
-            android:layout_width="match_parent"
-            android:layout_height="50dp"
-            android:layout_marginTop="10dp"
-            android:background="@drawable/edittext_background"
-            android:ems="10"
-            android:hint="Enter Your Username"
-            android:inputType="text"
-            android:padding="12dp"
-            android:textColor="#707070"
-            android:textSize="18sp" />
+            <EditText
+                android:id="@+id/editTextUsername"
+                android:layout_width="match_parent"
+                android:layout_height="50dp"
+                android:layout_marginTop="10dp"
+                android:background="@drawable/edittext_background"
+                android:hint="Enter Your Username"
+                android:inputType="text"
+                android:padding="12dp"
+                android:textColor="#707070"
+                android:textSize="18sp" />
 
-        <TextView
-            android:id="@+id/textView67"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="12dp"
-            android:text="Email"
-            android:textColor="#000000"
-            android:textSize="20sp"
-            android:textStyle="bold" />
+            <TextView
+                android:id="@+id/textView67"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginTop="12dp"
+                android:text="Email"
+                android:textColor="#000000"
+                android:textSize="20sp"
+                android:textStyle="bold" />
 
-        <EditText
-            android:id="@+id/emailEditText"
-            android:layout_width="match_parent"
-            android:layout_height="50dp"
-            android:layout_marginTop="10dp"
-            android:background="@drawable/edittext_background"
-            android:ems="10"
-            android:hint="Enter Your Email"
-            android:inputType="textEmailAddress"
-            android:padding="12dp"
-            android:textColor="#707070"
-            android:textSize="18sp" />
+            <EditText
+                android:id="@+id/emailEditText"
+                android:layout_width="match_parent"
+                android:layout_height="50dp"
+                android:layout_marginTop="10dp"
+                android:background="@drawable/edittext_background"
+                android:hint="Enter Your Email"
+                android:inputType="textEmailAddress"
+                android:padding="12dp"
+                android:textColor="#707070"
+                android:textSize="18sp" />
 
-        <TextView
-            android:id="@+id/textView6"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="14dp"
-            android:text="Password"
-            android:textColor="#000000"
-            android:textSize="20sp"
-            android:textStyle="bold" />
+            <TextView
+                android:id="@+id/textView6"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginTop="14dp"
+                android:text="Password"
+                android:textColor="#000000"
+                android:textSize="20sp"
+                android:textStyle="bold" />
 
-        <EditText
-            android:id="@+id/passwordEditText"
-            android:layout_width="match_parent"
-            android:layout_height="50dp"
-            android:layout_marginTop="10dp"
-            android:background="@drawable/edittext_background"
-            android:ems="10"
-            android:hint="Enter Your Password"
-            android:inputType="textPassword"
-            android:padding="12dp"
-            android:textColor="#707070"
-            android:textSize="18sp" />
+            <EditText
+                android:id="@+id/passwordEditText"
+                android:layout_width="match_parent"
+                android:layout_height="50dp"
+                android:layout_marginTop="10dp"
+                android:background="@drawable/edittext_background"
+                android:hint="Enter Your Password"
+                android:inputType="textPassword"
+                android:padding="12dp"
+                android:textColor="#707070"
+                android:textSize="18sp" />
 
-        <TextView
-            android:id="@+id/textView8"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="12dp"
-            android:text="Confirm Password"
-            android:textColor="#000000"
-            android:textSize="20sp"
-            android:textStyle="bold" />
+            <TextView
+                android:id="@+id/textView8"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginTop="12dp"
+                android:text="Confirm Password"
+                android:textColor="#000000"
+                android:textSize="20sp"
+                android:textStyle="bold" />
 
-        <EditText
-            android:id="@+id/confirmPasswordEditText"
-            android:layout_width="match_parent"
-            android:layout_height="50dp"
-            android:layout_marginTop="10dp"
-            android:background="@drawable/edittext_background"
-            android:ems="10"
-            android:hint="Confirm Your Password"
-            android:inputType="textPassword"
-            android:padding="12dp"
-            android:textColor="#707070"
-            android:textSize="18sp" />
+            <EditText
+                android:id="@+id/confirmPasswordEditText"
+                android:layout_width="match_parent"
+                android:layout_height="50dp"
+                android:layout_marginTop="10dp"
+                android:background="@drawable/edittext_background"
+                android:hint="Confirm Your Password"
+                android:inputType="textPassword"
+                android:padding="12dp"
+                android:textColor="#707070"
+                android:textSize="18sp" />
 
-        <androidx.appcompat.widget.AppCompatButton
-            android:id="@+id/registerButton"
-            style="@android:style/Widget.Button"
-            android:layout_width="match_parent"
-            android:layout_height="50dp"
-            android:layout_marginTop="26dp"
-            android:background="@drawable/button_background"
-            android:text="Register"
-            android:textColor="#ffffff"
-            android:textSize="25sp"
-            android:textStyle="bold" />
-    </LinearLayout>
+            <androidx.appcompat.widget.AppCompatButton
+                android:id="@+id/registerButton"
+                android:layout_width="match_parent"
+                android:layout_height="50dp"
+                android:layout_marginTop="26dp"
+                android:background="@drawable/button_background"
+                android:text="Register"
+                android:textColor="#ffffff"
+                android:textSize="25sp"
+                android:textStyle="bold" />
+        </LinearLayout>
     </ScrollView>
-
-
-</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
+</androidx.constraintlayout.widget.ConstraintLayout>
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CompilerConfiguration\">\r\n    <bytecodeTargetLevel target=\"17\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
--- a/.idea/compiler.xml	(revision 46aa141b5236783df088f4cd081e249307c71ffc)
+++ b/.idea/compiler.xml	(date 1740541992361)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="CompilerConfiguration">
-    <bytecodeTargetLevel target="17" />
+    <bytecodeTargetLevel target="21" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_17\" default=\"true\" project-jdk-name=\"jbr-17\" project-jdk-type=\"JavaSDK\" />\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 46aa141b5236783df088f4cd081e249307c71ffc)
+++ b/.idea/misc.xml	(date 1740542834007)
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ExternalStorageConfigurationManager" enabled="true" />
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="jbr-17" project-jdk-type="JavaSDK" />
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_21" default="true" project-jdk-name="jbr-21" project-jdk-type="JavaSDK" />
 </project>
\ No newline at end of file
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"gradleJvm\" value=\"#GRADLE_LOCAL_JAVA_HOME\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveExternalAnnotations\" value=\"false\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
--- a/.idea/gradle.xml	(revision 46aa141b5236783df088f4cd081e249307c71ffc)
+++ b/.idea/gradle.xml	(date 1740541995056)
@@ -4,6 +4,7 @@
   <component name="GradleSettings">
     <option name="linkedExternalProjectsSettings">
       <GradleProjectSettings>
+        <option name="testRunner" value="CHOOSE_PER_TEST" />
         <option name="externalProjectPath" value="$PROJECT_DIR$" />
         <option name="gradleJvm" value="#GRADLE_LOCAL_JAVA_HOME" />
         <option name="modules">
Index: app/src/main/java/com/example/powerscout/LoginActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.powerscout;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Patterns;\r\nimport android.view.View;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.google.android.gms.auth.api.signin.GoogleSignIn;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInAccount;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInOptions;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInClient;\r\nimport com.google.android.gms.common.api.ApiException; // Add this import\r\nimport com.google.firebase.auth.AuthCredential; // Add this import\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.auth.GoogleAuthProvider;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\n\r\npublic class LoginActivity extends AppCompatActivity {\r\n\r\n    private EditText editTextEmail, editTextPassword;\r\n    private TextView recoverPasswordText;\r\n    private FirebaseAuth mAuth;\r\n    private FirebaseFirestore db;\r\n\r\n    // Google Sign-In\r\n    private GoogleSignInClient mGoogleSignInClient;\r\n    private static final int RC_SIGN_IN = 9001;  // Request code for Google Sign-In\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_login);\r\n\r\n        // Initialize Firebase Auth\r\n        mAuth = FirebaseAuth.getInstance();\r\n        db = FirebaseFirestore.getInstance();\r\n\r\n        // Initialize UI elements\r\n        editTextEmail = findViewById(R.id.editTextUserName);\r\n        editTextPassword = findViewById(R.id.editTextPassword);\r\n        recoverPasswordText = findViewById(R.id.textView6);\r\n\r\n        // Configure Google Sign-In\r\n        GoogleSignInOptions gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)\r\n                .requestIdToken(getString(R.string.default_web_client_id))  // Get your Web Client ID from Firebase\r\n                .requestEmail()\r\n                .build();\r\n        mGoogleSignInClient = GoogleSignIn.getClient(this, gso);\r\n\r\n        // Set click listeners\r\n        recoverPasswordText.setOnClickListener(v -> {\r\n            // Navigate to ResetPasswordActivity\r\n            Intent resetPasswordIntent = new Intent(LoginActivity.this, ResetPasswordActivity.class);\r\n            startActivity(resetPasswordIntent);\r\n        });\r\n\r\n        findViewById(R.id.button2).setOnClickListener(v -> userLogin());\r\n\r\n        // Google Sign-In Button Click\r\n        findViewById(R.id.google_sign_in_button).setOnClickListener(v -> signInWithGoogle());\r\n    }\r\n\r\n    private void userLogin() {\r\n        String email = editTextEmail.getText().toString().trim();\r\n        String password = editTextPassword.getText().toString().trim();\r\n\r\n        if (email.isEmpty()) {\r\n            editTextEmail.setError(\"Email is required!\");\r\n            editTextEmail.requestFocus();\r\n            return;\r\n        }\r\n\r\n        if (!Patterns.EMAIL_ADDRESS.matcher(email).matches()) {\r\n            editTextEmail.setError(\"Please enter a valid email address!\");\r\n            editTextEmail.requestFocus();\r\n            return;\r\n        }\r\n\r\n        if (password.isEmpty()) {\r\n            editTextPassword.setError(\"Password is required!\");\r\n            editTextPassword.requestFocus();\r\n            return;\r\n        }\r\n\r\n        findViewById(R.id.button2).setEnabled(false);\r\n\r\n        mAuth.signInWithEmailAndPassword(email, password)\r\n                .addOnCompleteListener(this, task -> {\r\n                    if (task.isSuccessful()) {\r\n                        // Check if user exists in Firestore after successful login\r\n                        checkUserInFirestore(email);\r\n                    } else {\r\n                        findViewById(R.id.button2).setEnabled(true);\r\n                        Toast.makeText(LoginActivity.this, \"Login failed! Please check your credentials.\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                });\r\n    }\r\n\r\n    private void checkUserInFirestore(String email) {\r\n        // Assuming the user exists and moving to MainActivity\r\n        Intent intent = new Intent(LoginActivity.this, MainActivity.class);\r\n        startActivity(intent);\r\n        finish();\r\n    }\r\n\r\n    private void signInWithGoogle() {\r\n        Intent signInIntent = mGoogleSignInClient.getSignInIntent();\r\n        startActivityForResult(signInIntent, RC_SIGN_IN);\r\n    }\r\n\r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n\r\n        if (requestCode == RC_SIGN_IN) {\r\n            Task<GoogleSignInAccount> task = GoogleSignIn.getSignedInAccountFromIntent(data);\r\n            handleSignInResult(task);\r\n        }\r\n    }\r\n\r\n    private void handleSignInResult(Task<GoogleSignInAccount> completedTask) {\r\n        try {\r\n            GoogleSignInAccount account = completedTask.getResult(ApiException.class); // Use ApiException here\r\n            firebaseAuthWithGoogle(account);\r\n        } catch (ApiException e) {\r\n            Toast.makeText(this, \"Google Sign-In failed: \" + e.getMessage(), Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    private void firebaseAuthWithGoogle(GoogleSignInAccount acct) {\r\n        AuthCredential credential = GoogleAuthProvider.getCredential(acct.getIdToken(), null); // AuthCredential\r\n        mAuth.signInWithCredential(credential)\r\n                .addOnCompleteListener(this, task -> {\r\n                    if (task.isSuccessful()) {\r\n                        FirebaseUser user = mAuth.getCurrentUser();\r\n                        checkUserInFirestore(user.getEmail());\r\n                    } else {\r\n                        Toast.makeText(LoginActivity.this, \"Authentication failed.\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                });\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/powerscout/LoginActivity.java b/app/src/main/java/com/example/powerscout/LoginActivity.java
--- a/app/src/main/java/com/example/powerscout/LoginActivity.java	(revision 46aa141b5236783df088f4cd081e249307c71ffc)
+++ b/app/src/main/java/com/example/powerscout/LoginActivity.java	(date 1740565062086)
@@ -1,5 +1,6 @@
 package com.example.powerscout;
 
+import android.app.AlertDialog;
 import android.content.Intent;
 import android.os.Bundle;
 import android.util.Patterns;
@@ -96,8 +97,8 @@
         mAuth.signInWithEmailAndPassword(email, password)
                 .addOnCompleteListener(this, task -> {
                     if (task.isSuccessful()) {
-                        // Check if user exists in Firestore after successful login
-                        checkUserInFirestore(email);
+                        // Show success alert and then navigate to HomeActivity
+                        showLoginSuccessDialog();
                     } else {
                         findViewById(R.id.button2).setEnabled(true);
                         Toast.makeText(LoginActivity.this, "Login failed! Please check your credentials.", Toast.LENGTH_SHORT).show();
@@ -105,6 +106,21 @@
                 });
     }
 
+    private void showLoginSuccessDialog() {
+        new AlertDialog.Builder(this)
+                .setTitle("Login Successful")
+                .setMessage("You have successfully logged in!")
+                .setPositiveButton("OK", (dialog, which) -> {
+                    // Navigate to HomeActivity after pressing OK
+                    Intent intent = new Intent(LoginActivity.this, activity_update_info1.class);
+                    startActivity(intent);
+                    finish();
+                })
+                .setCancelable(false) // Prevent dismissing by tapping outside
+                .show();
+    }
+
+
     private void checkUserInFirestore(String email) {
         // Assuming the user exists and moving to MainActivity
         Intent intent = new Intent(LoginActivity.this, MainActivity.class);
Index: app/src/main/res/layout/activity_drawer_header.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:orientation=\"vertical\"\r\n    android:layout_width=\"match_parent\"\r\n    android:gravity=\"bottom\"\r\n    android:padding=\"20dp\"\r\n    android:background=\"@color/blue\"\r\n    android:layout_height=\"180dp\">\r\n\r\n    <androidx.cardview.widget.CardView\r\n        android:layout_width=\"60dp\"\r\n        android:layout_height=\"60dp\"\r\n        app:cardCornerRadius=\"40dp\"\r\n        app:cardElevation=\"0dp\"\r\n        android:backgroundTint=\"#D1D1D1\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/userImage\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:src=\"@drawable/round_person\" />\r\n\r\n    </androidx.cardview.widget.CardView>\r\n\r\n    <TextView\r\n        android:id=\"@+id/textUserName\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"User Name\"\r\n        android:layout_marginTop=\"10dp\"\r\n        android:layout_marginBottom=\"5dp\"\r\n        android:textColor=\"@color/black\"\r\n        android:textSize=\"15sp\"\r\n        android:textStyle=\"bold\" />\r\n\r\n    <TextView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"User Email\"\r\n        android:textColor=\"#323232\"\r\n        android:textSize=\"13sp\" />\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_drawer_header.xml b/app/src/main/res/layout/activity_drawer_header.xml
--- a/app/src/main/res/layout/activity_drawer_header.xml	(revision 46aa141b5236783df088f4cd081e249307c71ffc)
+++ b/app/src/main/res/layout/activity_drawer_header.xml	(date 1740551968721)
@@ -34,7 +34,9 @@
         android:textSize="15sp"
         android:textStyle="bold" />
 
+
     <TextView
+        android:id="@+id/textUserEmail"
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
         android:text="User Email"
